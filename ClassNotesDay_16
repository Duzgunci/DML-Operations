public without sharing class Example1_Discount {
    public static void discountCalculator(Id oppId, Decimal rate){
        //Get Record
    Opportunity opp = [SELECT Id, Amount, Discount__c FROM Opportunity WHERE Id = :oppId LIMIT 1];
        //Do Calculation
        opp.Discount__C= opp.Amount * rate;
        //DML statement
        update opp;
    }
}

Debug screen: Example1_Discount.discountCalculator('0068c00000sEWSFAA4',0.15);


public without sharing class OppListDiscount {

    public static void discountUpdate(){
    //Get Opp Records
        List<Opportunity> opps = [SELECT Id, Amount, Discount__c, Account.Type FROM Opportunity];
        list<Opportunity> newOpps = new List <Opportunity> ();

        for(Opportunity o : opps)  {
    // Calculations
        if (o.Account.Type == 'Technology Partner') {
            o.Discount__c= o.Amount * 0.10;
            newOpps.add(o);
           }else if(o.Account.Type == 'Installation Partner'){
            o.Discount__c= o.Amount * 0.20;
            newOpps.add(o);

           }else if (o.Account.Type == 'Channel Partner/Reseller'){
            o.Discount__c= o.Amount * 0.25;
            newOpps.add(o);

           }else{

            o.Discount__c= o.Amount * 0.05;
            newOpps.add(o);
           } 
        }  
    //DML Statement
    update newOpps;
    }
}
Debug screen: OppListDiscount.discountUpdate();


//Search oil companies and apply predefined discount also set account description field of opps as  "Eligible for discount"


public without sharing class Example3_Discount {
    
    
    public static void oilDiscount(){
        //List of list search result Account and Opps
        list<list<SObject>>  searchResult = [FIND 'Oil' IN ALL FIELDS RETURNING Account(Id, Description), Opportunity(Id, Amount, Discount__c)];
        
        //Separated Account and Opportunity Lists
        List<Account> accs = (list<Account>) searchResult[0];
        List<Opportunity> opps = (list<Opportunity>) searchResult[1];

        //New Empty Lists
        List<Account> newAccs = new list<Account>();
        List<Opportunity> newOpps = new list<Opportunity>();

        for(Account a :accs){
            a.Description = 'Eligible for discount';
            newAccs.add(a);
        }
 for(Opportunity o :opps){
            o.Discount__c = o.Amount * 0.3;
            newOpps.add(o);
        }

    update newAccs;
    update newOpps;

    }
}

Debug screen: Example3_Discount..oilDiscount();
